///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AutoInstall
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AboutHBButton recording.
    /// </summary>
    [TestModule("a81f081a-6f43-4bfe-ac3d-9352db5ddc1a", ModuleType.Recording, 1)]
    public partial class AboutHBButton : ITestModule
    {
        /// <summary>
        /// Holds an instance of the AutoInstallRepository repository.
        /// </summary>
        public static AutoInstallRepository repo = AutoInstallRepository.Instance;

        static AboutHBButton instance = new AboutHBButton();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AboutHBButton()
        {
            YearVersion = "2018.1";
            CompanyName = "Test Company 999";
            HBType = "Advanced";
            Licenses = "100";
            InstallType = "Multiuser";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AboutHBButton Instance
        {
            get { return instance; }
        }

#region Variables

        string _YearVersion;

        /// <summary>
        /// Gets or sets the value of variable YearVersion.
        /// </summary>
        [TestVariable("eb847589-d01e-406b-81b6-7a1e9964e032")]
        public string YearVersion
        {
            get { return _YearVersion; }
            set { _YearVersion = value; }
        }

        string _CompanyName;

        /// <summary>
        /// Gets or sets the value of variable CompanyName.
        /// </summary>
        [TestVariable("0cefe231-4087-4777-87e8-39f230e8ef9d")]
        public string CompanyName
        {
            get { return _CompanyName; }
            set { _CompanyName = value; }
        }

        string _HBType;

        /// <summary>
        /// Gets or sets the value of variable HBType.
        /// </summary>
        [TestVariable("485632f6-d046-479c-859d-64b503855835")]
        public string HBType
        {
            get { return _HBType; }
            set { _HBType = value; }
        }

        string _InstallType;

        /// <summary>
        /// Gets or sets the value of variable InstallType.
        /// </summary>
        [TestVariable("2dfc22ad-b310-42b6-8569-b1949e3ffdce")]
        public string InstallType
        {
            get { return _InstallType; }
            set { _InstallType = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Licenses.
        /// </summary>
        [TestVariable("6974e7cb-6b2e-4aa5-a936-a0bd5f0324db")]
        public string Licenses
        {
            get { return repo.Licenses; }
            set { repo.Licenses = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.1")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.1")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HeavyBidApp.Tabs.HelpTab' at Center.", repo.HeavyBidApp.Tabs.HelpTabInfo, new RecordItemIndex(0));
            repo.HeavyBidApp.Tabs.HelpTab.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HeavyBidApp.Buttons.Help.HelpAboutHeavyBidButton' at Center.", repo.HeavyBidApp.Buttons.Help.HelpAboutHeavyBidButtonInfo, new RecordItemIndex(1));
            repo.HeavyBidApp.Buttons.Help.HelpAboutHeavyBidButton.Click();
            Delay.Milliseconds(200);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeRegex (Text~$YearVersion) on item 'HBPopUpScreens.FromHelpButtons.AboutHeavyBid.HBTextLine'.", repo.HBPopUpScreens.FromHelpButtons.AboutHeavyBid.HBTextLineInfo, new RecordItemIndex(2));
                Validate.AttributeRegex(repo.HBPopUpScreens.FromHelpButtons.AboutHeavyBid.HBTextLineInfo, "Text", new Regex(YearVersion), null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(2)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeRegex (Text~$HBType) on item 'HBPopUpScreens.FromHelpButtons.AboutHeavyBid.HBTextLine'.", repo.HBPopUpScreens.FromHelpButtons.AboutHeavyBid.HBTextLineInfo, new RecordItemIndex(3));
                Validate.AttributeRegex(repo.HBPopUpScreens.FromHelpButtons.AboutHeavyBid.HBTextLineInfo, "Text", new Regex(HBType), null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(3)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeRegex (Text~$CompanyName) on item 'HBPopUpScreens.FromHelpButtons.AboutHeavyBid.CompanyNameTextLine'.", repo.HBPopUpScreens.FromHelpButtons.AboutHeavyBid.CompanyNameTextLineInfo, new RecordItemIndex(4));
                Validate.AttributeRegex(repo.HBPopUpScreens.FromHelpButtons.AboutHeavyBid.CompanyNameTextLineInfo, "Text", new Regex(CompanyName), null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(4)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeRegex (Text~$Licenses) on item 'HBPopUpScreens.FromHelpButtons.AboutHeavyBid.LicenseAmountTextLine'.", repo.HBPopUpScreens.FromHelpButtons.AboutHeavyBid.LicenseAmountTextLineInfo, new RecordItemIndex(5));
                Validate.AttributeRegex(repo.HBPopUpScreens.FromHelpButtons.AboutHeavyBid.LicenseAmountTextLineInfo, "Text", new Regex(Licenses), null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeRegex (Text~$InstallType) on item 'HBPopUpScreens.FromHelpButtons.AboutHeavyBid.LicenseAmountTextLine'.", repo.HBPopUpScreens.FromHelpButtons.AboutHeavyBid.LicenseAmountTextLineInfo, new RecordItemIndex(6));
                Validate.AttributeRegex(repo.HBPopUpScreens.FromHelpButtons.AboutHeavyBid.LicenseAmountTextLineInfo, "Text", new Regex(InstallType), null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HBPopUpScreens.FromHelpButtons.AboutHeavyBid.SystemInfo' at Center.", repo.HBPopUpScreens.FromHelpButtons.AboutHeavyBid.SystemInfoInfo, new RecordItemIndex(7));
            repo.HBPopUpScreens.FromHelpButtons.AboutHeavyBid.SystemInfo.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HBPopUpScreens.FromHelpButtons.SystemInformationAboutHB.CloseButton' at UpperCenter.", repo.HBPopUpScreens.FromHelpButtons.SystemInformationAboutHB.CloseButtonInfo, new RecordItemIndex(8));
            repo.HBPopUpScreens.FromHelpButtons.SystemInformationAboutHB.CloseButton.Click(Location.UpperCenter);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HBPopUpScreens.FromHelpButtons.AboutHeavyBid.CloseButton' at Center.", repo.HBPopUpScreens.FromHelpButtons.AboutHeavyBid.CloseButtonInfo, new RecordItemIndex(9));
            repo.HBPopUpScreens.FromHelpButtons.AboutHeavyBid.CloseButton.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
